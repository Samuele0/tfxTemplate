plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.beryx.jlink' version '2.4.3'
    id "com.github.breadmoirai.github-release" version "2.2.9"
}

group 'com.github.samuele0'
version '1.0-SNAPSHOT'

javafx {
    modules = ['javafx.controls', 'javafx.fxml']
}
application {
    mainClassName = "tfxTemplate.main/com.github.samuele0.tfxtemplate.MainApp"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.50"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.10"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation('no.tornado:tornadofx:1.7.17') {
        exclude module: 'org.jetbrains.kotlin'
    }
}
compileJava {
    destinationDir = compileKotlin.destinationDir
}


jlink {
    launcher {
        name = "hello"
    }
    addExtraDependencies("javafx")
    imageZip.set(project.file("" + project.buildDir + "/image-zip/hello-image.zip"))
}
jlinkZip {
    imageZip = project.file("${buildDir}/distributions/${javafx.platform.classifier}.zip")

}
if (System.getenv("githubtoken") != null)
    githubRelease {
        token System.getenv("githubtoken")// This is your personal access token with Repo permissions
        // You get this from your user settings > developer settings
        // If this value is not set, a login dialog will prompt you for your credentials.
        // 2fa is not supported
        owner "samuele0"
        // default is the last part of your group. Eg group: "com.github.breadmoirai" => owner: "breadmoirai"
        repo "tfxTemplate" // by default this is set to your project name
        tagName "CI" // by default this is set to "v${project.version}"
        targetCommitish "master" // by default this is set to "master"
        releaseName "CI" // Release title, by default this is the same as the tagName
        body "" // by default this is empty
        draft false // by default this is false
        prerelease false // by default this is false
        releaseAssets project.file("${buildDir}/distributions/").listFiles()
        // this points to which files you want to upload as assets with your release
        overwrite true // by default false; if set to true, will delete an existing release with the same tag and name
        apiEndpoint "https://api.github.com" // should only change for github enterprise users
    }
distributions {
    main {
        baseName = "${javafx.platform.classifier}-noJVM"
    }
}